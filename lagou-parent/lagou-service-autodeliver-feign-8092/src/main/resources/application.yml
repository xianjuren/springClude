server:
  port: 8092

eureka:
  client:
    service-url:
      #添加集群的地址，多个以逗号分割;单实例是需要写一个就好
      defaultZone: http://LagouCloudEurekaServerA:8761/eureka,http://LagouCloudEurekaServerB:8762/eureka
  instance:
    #192.168.0.103:lagou-service-resume:8080 而不是LagouCloudEurekaServerA:lagou-service-resume:8080
    prefer-ip-address: true  #服务实例中显示ip,而不是显示主机名（兼容老的eureka版本）
    #实例名称：192.168.0.103:lagou-service-resume:8080，我们可以自定义它,如下：ip地址：服务名：端口号：版本
    # 192.168.0.103:lagou-service-resume:8080:1.0-SNAPSHOT
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:@project.version@
spring:
  application:
    name: lagou-service-autodeliver
  main:
    allow-bean-definition-overriding: true #当遇到相同名字时，是否允许覆盖注册
##针对的被调用方微服务名称,不加就是全局生效
#lagou-service-resume:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RoundRobinRule #负载策略调整


# springboot中暴露健康检查等断点接口
management:
  endpoints:
    web:
      exposure:
        # * 表示所有的接口
        include: "*"
# 暴露健康接口的细节
  endpoint:
    health:
      show-details: always

## 配置熔断策略,也可以在指定的方法上通过注解@HystrixCommand来设置，方法优先级高于全局设置:
#hystrix:
#  command:
#    default:
#     circuitBreaker:
#     # 强制打开熔断器，如果该属性设置为true，强制断路器进入打开状态，将会拒绝所有的请求。 默认false关闭的
#       forceOpen: false
#  # 触发熔断错误比例阈值，默认值50%
#       errorThresholdPercentage: 50
#  # 熔断后休眠时⻓，默认值5秒
#       sleepWindowInMilliseconds: 3000
#       # 熔断触发最小请求次数，默认值是20
#       requestVolumeThreshold: 2
#    execution:
#      isolation:
#        thread:
#  # 熔断超时设置，默认为1秒
#          timeoutInMilliseconds: 2000
